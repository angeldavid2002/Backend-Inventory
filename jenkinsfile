pipeline {
    agent any

    tools {
        nodejs 'NodeJS 14' // Asegúrate de que este nombre coincida con lo que configuraste en Jenkins
    }

    stages {
        stage('Checkout') {
            steps {
                // Clonar el repositorio desde GitHub
                git url: 'https://github.com/angeldavid2002/Backend-Inventory.git', branch: 'main'
            }
        }

        stage('Install Dependencies') {
            steps {
                // Instalar las dependencias del proyecto
                sh 'npm install'
            }
        }

        stage('Run Tests') {
            steps {
                // Ejecutar las pruebas unitarias
                sh 'npm test'
            }
        }

        stage('SonarQube Analysis') {
            environment {
                scannerHome = tool 'SonarQube Scanner' // Asegúrate de que el nombre coincida con lo que configuraste en Jenkins
            }
            steps {
                withSonarQubeEnv('SonarQube') { // 'SonarQube' es el nombre de la instancia de SonarQube configurada en Jenkins
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            }
        }

        stage('Quality Gate') {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }

    post {
        always {
            echo 'El pipeline terminó.'
        }
        success {
            echo 'El pipeline se completó con éxito.'
        }
        failure {
            echo 'El pipeline falló.'
        }
    }
}
